https://leetcode.com/problems/reverse-linked-list

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* reverseList(ListNode* head) {
        
    ListNode *prev = NULL;
    ListNode *curr = head;
    ListNode *next  = NULL;
    while(curr)
    {
        next = curr-> next;
        curr-> next = prev;
        prev = curr;
        curr = next;
    }
        return prev;
        
    }
};

/*
here we are applying the logic that 
we will create a node for each val and new node will be added at back side 

*/
