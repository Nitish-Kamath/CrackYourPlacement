https://leetcode.com/problems/max-value-of-equation


class Solution {
public:
    int findMaxValueOfEquation(vector<vector<int>>& nums, int k) {
            priority_queue<pair<int,int>> pq;
            pq.push({nums[0][1] - nums[0][0],nums[0][0]});
            int maxi = INT_MIN;

            for(int i = 1;i < nums.size();i++)
            {
                while(!pq.empty() and ((nums[i][0] - pq.top().second) > k) )
                pq.pop();
                if(!pq.empty())
                {
                int sum = nums[i][0] + nums[i][1] + pq.top().first;
                maxi = max(maxi,sum);

                }
                pq.push({nums[i][1] - nums[i][0],nums[i][0]});

            }
        return maxi;
        
    }
};

/*
ps:
It is very simple 
x is in increasing order
here we have take abs diff of x and add c/s y value 
and find out max value 

soln:
here we can max heap 
here x value would be nums[i][1] and y value would be nums[i][0]
[note: since we have to also take care of x so we will push as {nums[i][1] - nums[i][0],nums[i][0]}]

so that pair whose  nums[i][1] - nums[i][0] is max will reamain at top in max heap 


*/
