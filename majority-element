https://leetcode.com/problems/majority-element

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int> mp;

        for(auto x : nums )
        mp[x]++;

        for(auto x : mp)
        {
            if(x.second > nums.size()/2)
            return x.first;
        }
        return -1;
        
    }
};


/*
ps:
very simple question here we have to find out that single element whose freq is greater than n/2 
times

solution:
sol01:
we can use sorting
soln02:
we can use map 

what if: 
if single element doesn't exist 
if more than one element exist 


*/
