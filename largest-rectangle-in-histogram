https://leetcode.com/problems/largest-rectangle-in-histogram

class Solution {
public:
    int largestRectangleArea(vector<int>& nums) {
        int n = nums.size();
        vector<int>left(n,0);
         vector<int>right(n,0);
         int maxi = 0;
        stack<int>st;

        for(int i = 0;i< n;i++)
        {
            while(!st.empty() and nums[i] <=  nums[st.top()]  )
            st.pop();

            if(st.empty())
            left[i] = 0;
            else
            left[i] = st.top() + 1;
            st.push(i);
        }

        while(!st.empty())
        st.pop();

        for(int i = n-1;i >= 0;i--)
        {
             while(!st.empty() and nums[i] <=  nums[st.top()]  )
            st.pop();

            if(st.empty())
            right[i] = n-1;
            else
            right[i] = st.top() - 1;

            st.push(i);
        }

        for(int i = 0;i < n;i++)
             maxi = max(maxi,(nums[i] * (right[i] - left[i] + 1)));
        return maxi;
        
    }
};


/*
ps:
It is very simple question 
but Intuition is very hard to get 
here we have to find next smaller element for both sides 

think of case to get idea of what to delete from stack 
when moving from left to right 
2 -> 4 
5 -> 4

when moving from right to left 
2 -> 4 
5 -> 4 


*/
