https://leetcode.com/problems/range-sum-query-mutable

class NumArray {
public:
    vector<int> v,tree;
    int n;
    void buildtree(int s,int e,int x){
        if(s==e){
            tree[x] = v[s];
            return;
        }
        int mid = (e-s)/2+s;
        buildtree(s,mid,2*x+1);
        buildtree(mid+1,e,2*x+2);
        tree[x] = tree[2*x+1]+tree[2*x+2];
    }
    NumArray(vector<int>& nums) {
        n = nums.size();
        tree.resize(n*4,0);
        v = nums;
        buildtree(0,n-1,0);
    }
    void up1date(int s,int e,int x,int index,int val){
        if(index<s||index>e){
            return;
        }
        if(s==e){
            if(s==index){
                tree[x] = val;
            }
            return;
        }
        int mid = (e-s)/2+s;
        up1date(s,mid,x*2+1,index,val);
        up1date(mid+1,e,x*2+2,index,val);
        tree[x] = tree[2*x+1]+tree[2*x+2];
    }
    void update(int index, int val) {
        up1date(0,n-1,0,index,val);
    }
    int getsum(int l,int r,int s,int e,int x){
        if(r<s||l>e){
            return 0;
        }
        if(l<=s&&r>=e){
            return tree[x];
        }
        int mid = (e-s)/2+s;
        return getsum(l,r,s,mid,2*x+1)+getsum(l,r,mid+1,e,2*x+2);
    }
    int sumRange(int left, int right) {
        return getsum(left,right,0,n-1,0);
    }
};
